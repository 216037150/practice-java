Java was made in 1995 by Sun MicroSystem, and lead by the team of James Gosling
It is updated every six months
Java is platform independent, because of JVM
JVM is platform dependent
JVM only understand bytecode
Java Code(Human language) --> compiler(Javac)-->Bytecode-->JVM
At least one class must have one main as an entry point.
it must have this method: public static void main (String[] args) : this is the signature


Java is Object Oriented, meaning we must have class and object
As a developers, we install JDK, and JDK contain JRE, and JRE contains JVM
Variable: Imagine variable is a box, you want to store some thing, then what type of this something


Data Types

Baby Shark Can Interpret Long Fish Dream Better

Baby → byte

shark → short

Can → char

Interpret → int

Long → long

Fish → float

Dream → double

Better -> Boolean

Primitive data types:   1. Integer: int, byte, short, long
                        2. Float: float, double
                        3 Character: 'c'
                        4. Boolean: True or false

int num = 7;
int result = ++num // Increment and then fetch the value       (pre - increment)
int result = num++ // fetch the value and the increment        (post - increment)


Relational operators: <, >, >=, <=, True or false, ==, !=
Logical Operators: AND (&&), OR (||), NOT (!)
Truth Table
Ternary Oparator:   result = n%2 == 0 ? "Even": "Odd"      ======> System.out.println(result);

Switch statement: Switch( condition){ Case 1:
                            sout();
                            break;
                            Case 2
                            ...
                            default:
                            sout()
                            }
}

Loops:  for loop        : Used when the number of iterations is known. It runs a specific number of times.
        while loop      : Runs as long as the given condition is true. The condition is checked before each iteration.
        do while loop   : Similar to the while loop, but the condition is checked after the loop body executes.

